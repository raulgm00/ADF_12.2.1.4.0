package model.ventas.entities.am;

import java.util.ArrayList;

import java.util.HashMap;
import java.util.Map;

import model.ventas.entities.am.common.VentasAM;


import model.ventas.entities.vo.TablaDinamicaVOImpl;

import model.ventas.entities.vo.clases.TablaDinamicaVOBean;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 25 19:33:27 CDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VentasAMImpl extends ApplicationModuleImpl implements VentasAM {
    /**
     * This is the default constructor (do not remove).
     */
    public VentasAMImpl() {
    }
    
    
    public String invocarVoJarProgramatico(String data, int num){
        String ObjsString = this.getTablaDinamicaVO1().validaJarImplement(data, num);
        return ObjsString;    
    }
    
    public Map<String,TablaDinamicaVOBean> execute(String p_nombreTabla, Integer p_idTareaBpm){
        Map<String,TablaDinamicaVOBean> mapaConfiguracion = new HashMap <String,TablaDinamicaVOBean>();
        mapaConfiguracion = this.getTablaDinamicaVO1().validacionDinamica(p_nombreTabla, p_idTareaBpm);
        return mapaConfiguracion;    
    }
    
    public void filtrarCLiente(String p_nombre){
        //Desde el Modulo de aplciaciones obtenenos el VO, esto se logra apartir de que en el AM se publican las vistas VO
        //Obtenemos una intancia al ViewCreiterial asociado al VO
        this.getClienteVO1().setApplyViewCriteriaName("ClienteVOCriteria");
        //Realizamos el seteo de las variables de entrada
        //Recordar que esta variable es un parametro creado desde el viewCriterial como Bindiung
        //Lo cual nos indicara que viajara desde la pantalla View -> Controlado -> Modelo
        this.getClienteVO1().setNamedWhereClauseParam("p_nombre",p_nombre);
        //Esta sentencia ejecuta el query como tal de la vista VO
        this.getClienteVO1().executeQuery();
        
    }
    
    public void imprimirProductos(){
            System.out.println("=============================");
            System.out.println("-- Reporte de Prodcutos");
            System.out.println("=============================");
            //Siempre importar la clase ROW
            // -- import oracle.jbo.Row;Nos permite obtener una referencia a la primera instancia de la vista View Object(VO)
            Row fila = this.getProductoVO1().first();
            //Recorrido de la instancia VO
            while (fila != null) {
               System.out.println(fila.getAttribute("Precio") + "\t" + fila.getAttribute("Descripcion"));
               // Avanzamos  la fila
               fila = this.getProductoVO1().next();
           }
        }
        
        public void incrementarPrecio (double porcentaje) {
            System.out.println("====================================================================");
            System.out.println("-- Proceso de Aumento de precio");
            System.out.println("====================================================================");
            System.out.println("-- Precio" + "\t\t --%" + porcentaje + "\t\t\t Descripci?n");
            //Se obtiene la instancia de Productos que contienen n n?mero de filas
            Row fila = this.getProductoVO1().first();            
            
            while (fila != null) {
                Double precio =0.0;
                //Parseo
                precio = Double.valueOf(fila.getAttribute("Precio").toString());
                //Formula de %
                Double nuevoPrecio = (precio * (100 + porcentaje )) /100;
                // Redondeo
                nuevoPrecio = (Double) (Math.round(nuevoPrecio*100d)/100d);
                //Ejecuci?n de redondeo a 2 decimales
                System.out.println("Precio: $" + precio + "\t Nuevo Precio: $" + nuevoPrecio + "\t Producto: " +fila.getAttribute("Nombre") );
                // Seteamos valores para que se vayan registrando en la VO manipulada
                fila.setAttribute("Precio", nuevoPrecio);
                /* try {
                    fila.setAttribute("Precio", new Number(nuevoPrecio));
                
                } catch (SQLException e) {
                    System.err.println(e.toString());
                } */
                fila= this.getProductoVO1().next();
        }
            // Confirmaremos la transacci?n para reflejhar los cambios en la tabla
            this.getDBTransaction().commit();
            System.out.println("====================================================================");
            System.out.println("-- END Proceso (Valores reglejados en en ProductoVO -> ProductoEO)");
            System.out.println("====================================================================");
        }

    /**
     * Container's getter for ClienteVO1.
     * @return ClienteVO1
     */
    public ViewObjectImpl getClienteVO1() {
        return (ViewObjectImpl) findViewObject("ClienteVO1");
    }

    /**
     * Container's getter for DetalleVO1.
     * @return DetalleVO1
     */
    public ViewObjectImpl getDetalleVO1() {
        return (ViewObjectImpl) findViewObject("DetalleVO1");
    }

    /**
     * Container's getter for MovimientoVO1.
     * @return MovimientoVO1
     */
    public ViewObjectImpl getMovimientoVO1() {
        return (ViewObjectImpl) findViewObject("MovimientoVO1");
    }

    /**
     * Container's getter for ProductoVO1.
     * @return ProductoVO1
     */
    public ViewObjectImpl getProductoVO1() {
        return (ViewObjectImpl) findViewObject("ProductoVO1");
    }

    /**
     * Container's getter for MovimientoVO2.
     * @return MovimientoVO2
     */
    public ViewObjectImpl getMovimientoVO2() {
        return (ViewObjectImpl) findViewObject("MovimientoVO2");
    }

    /**
     * Container's getter for DetalleVO2.
     * @return DetalleVO2
     */
    public ViewObjectImpl getDetalleVO2() {
        return (ViewObjectImpl) findViewObject("DetalleVO2");
    }


    /**
     * Container's getter for MovimientoToDetalleVL1.
     * @return MovimientoToDetalleVL1
     */
    public ViewLinkImpl getMovimientoToDetalleVL1() {
        return (ViewLinkImpl) findViewLink("MovimientoToDetalleVL1");
    }

    /**
     * Container's getter for TablaDinamicaVO1.
     * @return TablaDinamicaVO1
     */
    public TablaDinamicaVOImpl getTablaDinamicaVO1() {
        return (TablaDinamicaVOImpl) findViewObject("TablaDinamicaVO1");
    }

}

